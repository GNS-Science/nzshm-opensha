package nz.cri.gns.NZSHM22.opensha.hazard;

import static org.junit.Assert.*;

import org.dom4j.DocumentException;
import org.junit.Test;
import org.opensha.commons.data.function.DiscretizedFunc;

import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.Arrays;
import java.util.List;

public class NZSHM22_HazardCalculatorBuilder_IntegrationTest {

    protected File getSolution() throws URISyntaxException {
        URL vernonSolution = Thread.currentThread().getContextClassLoader().getResource("ModularAlpineVernonInversionSolution.zip");
        return new File(vernonSolution.toURI());
    }

    @Test
    public void hazardCalcTest() throws URISyntaxException, DocumentException, IOException {
        NZSHM22_HazardCalculatorBuilder builder = new NZSHM22_HazardCalculatorBuilder();
        builder.setSolutionFile(getSolution());
        builder.setBackgroundOption("EXCLUDE");
        NZSHM22_HazardCalculator calculator = builder.build();
        DiscretizedFunc actual = calculator.calc(-41.289, 174.777);

        List<Double> expected = Arrays.asList(0.0778137512486966, 0.07781375124869183, 0.07781375124866374, 0.07781375124848389, 0.07781375124739276, 0.07781375123968137, 0.07781375120020961, 0.07781375100432308, 0.07781375003254265, 0.07781374579288103, 0.07781372706386747, 0.0778136544843071, 0.0778134005002663, 0.07781250480338087, 0.07780981114759933, 0.07780196822496799, 0.07778091997835213, 0.07772893120155766, 0.07760970054198757, 0.0773590310426645, 0.07686829898015257, 0.07598445164687595, 0.07450872774913642, 0.072221996352557, 0.06890966629235729, 0.06443295989283337, 0.05873915311143396, 0.05192969861762964, 0.04426101535752136, 0.036147499881604594, 0.02809576856482321, 0.02065172995244713, 0.014264859392911888, 0.00920770329562337, 0.005526981824169441, 0.0030720454393283747, 0.0015757346318683307, 7.437288313860702E-4, 3.2225038734257083E-4, 1.2793079472195323E-4, 4.646029707811028E-5, 1.5417194252353994E-5, 4.671927854360547E-6, 1.2927043256949489E-6, 3.2682755080060133E-7, 7.561856840698766E-8, 1.605050159447785E-8, 3.1360924968026893E-9, 5.665684588151976E-10, 9.514788956721532E-11, 1.4943934978361995E-11);
        assertEquals(expected, actual.yValues());

        builder = new NZSHM22_HazardCalculatorBuilder();
        builder.setSolutionFile(getSolution());
        builder.setBackgroundOption("INCLUDE");
        calculator = builder.build();
        actual = calculator.calc(-41.289, 174.777);

        expected = Arrays.asList(0.9999999999084646, 0.9999999998957412, 0.9999999998755941, 0.9999999998331611, 0.9999999997428801, 0.9999999994953228, 0.999999998870162, 0.9999999969443912, 0.9999999897103116, 0.9999999607374043, 0.9999998226363076, 0.9999991717569924, 0.9999962017694622, 0.9999819644911185, 0.9999239129088956, 0.9997001457473633, 0.998936682880625, 0.9966669479408655, 0.9907756430336577, 0.9776309929818684, 0.9519877073888555, 0.9085912475933338, 0.8439835328131405, 0.7586193961966673, 0.6570035469085997, 0.5473356535497595, 0.438221335801646, 0.33738559706879123, 0.24991659748393624, 0.17818700335700632, 0.12215581768264272, 0.0804148829243505, 0.050696394708391934, 0.03051711612440111, 0.01748473030354969, 0.009505980713281459, 0.004892627878387956, 0.0023800179583026715, 0.0010932170332372815, 4.739789678164241E-4, 1.9394658838978174E-4, 7.487689356655558E-5, 2.7254591353331747E-5, 9.337723884894622E-6, 3.0040636913586383E-6, 9.047449983645706E-7, 2.542437450570034E-7, 6.645691774664897E-8, 1.61196506143213E-8, 3.623254030138412E-9, 7.54590057105986E-10);
        assertEquals(expected, actual.yValues());

    }
}
