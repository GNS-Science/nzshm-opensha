package nz.cri.gns.NZSHM22.opensha.hazard;

import static org.junit.Assert.*;

import org.dom4j.DocumentException;
import org.junit.Test;
import org.opensha.commons.data.function.DiscretizedFunc;

import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.Arrays;
import java.util.List;

public class NZSHM22_HazardCalculatorBuilder_IntegrationTest {

    protected File getSolution() throws URISyntaxException {
        URL vernonSolution = Thread.currentThread().getContextClassLoader().getResource("AlpineVernonInversionSolution.zip");
        return new File(vernonSolution.toURI());
    }

    @Test
    public void hazardCalcTest() throws URISyntaxException, DocumentException, IOException {
        NZSHM22_HazardCalculatorBuilder builder = new NZSHM22_HazardCalculatorBuilder();
        builder.setSolutionFile(getSolution());
        builder.setBackgroundOption("EXCLUDE");
        NZSHM22_HazardCalculator calculator = builder.build();
        DiscretizedFunc actual = calculator.calc(-41.289, 174.777);

        List<Double> expected = Arrays.asList(
                0.3211698929961557, 0.321169875872248, 0.321169819371695, 0.32116960057608834, 0.3211688422242548, 0.3211659531186831, 0.3211578766674793, 0.32113585560139657, 0.3210772215174471, 0.3209405044288577, 0.3206238227109448, 0.31998302664823286, 0.3188002110050704, 0.316627208248234, 0.3131898059300432, 0.3078601185932023, 0.30015219624537304, 0.2896442627081436, 0.2759246655503975, 0.2588567331973849, 0.23823749668436656, 0.21432501991813124, 0.18757606021993234, 0.15889827149190539, 0.12951930830484204, 0.10110962950401492, 0.07519915322225756, 0.053087672222047466, 0.0354650303195333, 0.02237632131241074, 0.013304000503337465, 0.0074465124186932075, 0.003917423467559411, 0.0019342891187102973, 8.948809773987598E-4, 3.8704594923621993E-4, 1.5614154895604582E-4, 5.8606383023573905E-5, 2.0414223449005675E-5, 6.583034185103642E-6, 1.961041652176476E-6, 5.38721671161646E-7, 1.3634744389090514E-7, 3.1784101461873604E-8, 6.82988587907829E-9, 1.3555038202994751E-9, 2.4922408581318223E-10, 4.262723507508781E-11, 6.817990616525549E-12, 1.0254019855437946E-12, 1.4555023852835802E-13);
        assertEquals(expected, actual.yValues());

        builder = new NZSHM22_HazardCalculatorBuilder();
        builder.setSolutionFile(getSolution());
        calculator = builder.build();
        actual = calculator.calc(-41.289, 174.777);

        expected = Arrays.asList(0.9999999642767102, 0.9999999611532348, 0.9999999564045859, 0.9999999470640871, 0.9999999292437544, 0.9999998879880777, 0.9999998044232185, 0.9999996069662918, 0.9999990676850417, 0.9999975520127815, 0.9999926436287473, 0.9999770747430408, 0.9999287847821093, 0.9997709404650894, 0.9993210251316704, 0.9980770619836128, 0.9949477428405523, 0.9878633357751511, 0.9733904166403496, 0.9471092714364889, 0.9040323251573044, 0.8409315197872519, 0.7573952617359473, 0.6569850272708098, 0.5463176089151769, 0.43443606048686834, 0.3296066234437216, 0.23845645897933843, 0.16450979494589757, 0.10833921938532276, 0.06814864685670396, 0.04101171638958068, 0.023634472664805783, 0.013056472129841845, 0.006918955524792159, 0.0035176422656293393, 0.001715567216622027, 8.020681688691855E-4, 3.5898725572547363E-4, 1.534962963614106E-4, 6.251694790815332E-5, 2.4164107791824208E-5, 8.826750433121866E-6, 3.0331013272100193E-6, 9.76057657586793E-7, 2.929285813912941E-7, 8.169451548578621E-8, 2.1114917814202272E-8, 5.049318407834846E-9, 1.1166397806405826E-9, 2.2854507175651406E-10);
        assertEquals(expected, actual.yValues());

    }
}
